Have a non-directory at the top, so creating directory top_dir
Adding /home/justin/Documents/INFO4/Stage/linux-infra/size-of-linuxes/../linux-5.18/COPYING to top_dir
Adding /home/justin/Documents/INFO4/Stage/linux-infra/size-of-linuxes/../linux-5.18/CREDITS to top_dir
Creating filelist for Documentation
Adding /home/justin/Documents/INFO4/Stage/linux-infra/size-of-linuxes/../linux-5.18/Kbuild to top_dir
Adding /home/justin/Documents/INFO4/Stage/linux-infra/size-of-linuxes/../linux-5.18/Kconfig to top_dir
Creating filelist for LICENSES
Adding /home/justin/Documents/INFO4/Stage/linux-infra/size-of-linuxes/../linux-5.18/MAINTAINERS to top_dir
Adding /home/justin/Documents/INFO4/Stage/linux-infra/size-of-linuxes/../linux-5.18/Makefile to top_dir
Adding /home/justin/Documents/INFO4/Stage/linux-infra/size-of-linuxes/../linux-5.18/README to top_dir
Creating filelist for arch
Creating filelist for block
Creating filelist for certs
Creating filelist for crypto
Creating filelist for drivers
Creating filelist for fs
Creating filelist for include
Creating filelist for init
Creating filelist for ipc
Creating filelist for kernel
Creating filelist for lib
Creating filelist for mm
Creating filelist for net
Creating filelist for samples
Creating filelist for scripts
Creating filelist for security
Creating filelist for sound
Creating filelist for tools
Creating filelist for usr
Creating filelist for virt
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Warning: in tools, number of duplicates=115
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
15371884 drivers         ansic=15360416,perl=4459,asm=3901,yacc=1679,lex=771,
                        python=641,sh=17
1772642 arch            ansic=1508032,asm=254729,perl=7687,sh=1600,awk=544,
                        python=45,sed=5
1063430 sound           ansic=1063430
1039143 fs              ansic=1039143
894284  net             ansic=894278,asm=6
700572  include         ansic=698138,cpp=2434
681234  tools           ansic=558146,sh=85669,python=24849,perl=4720,asm=3661,
                        yacc=1747,cpp=1297,lex=766,awk=354,ruby=25
272031  kernel          ansic=271979,sh=52
159309  lib             ansic=159177,perl=119,awk=13
105692  mm              ansic=105692
83720   crypto          ansic=83720
71047   security        ansic=71047
64145   scripts         ansic=32975,perl=17705,sh=5042,python=3222,cpp=2307,
                        yacc=1486,lex=1185,awk=191,asm=32
40763   block           ansic=40763
31567   samples         ansic=29286,sh=2281
6743    ipc             ansic=6743
6367    virt            ansic=6367
5302    Documentation   python=2524,perl=1544,sh=943,ansic=163,awk=128
3093    init            ansic=3093
890     usr             ansic=553,sh=194,perl=131,asm=12
636     certs           ansic=581,asm=55
0       LICENSES        (none)
0       top_dir         (none)


Totals grouped by language (dominant language first):
ansic:     21933722 (98.03%)
asm:         262396 (1.17%)
sh:           95798 (0.43%)
perl:         36365 (0.16%)
python:       31281 (0.14%)
cpp:           6038 (0.03%)
yacc:          4912 (0.02%)
lex:           2722 (0.01%)
awk:           1230 (0.01%)
ruby:            25 (0.00%)
sed:              5 (0.00%)




Total Physical Source Lines of Code (SLOC)                = 22,374,494
Development Effort Estimate, Person-Years (Person-Months) = 7,383.65 (88,603.75)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 15.80 (189.66)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 467.18
Total Estimated Cost to Develop                           = $ 997,430,186
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."
